# path
# This allows you to change the path of clowder, the default is the root folder. If you change this you
# will alos need to update clowder.rabbitmq.clowderurl and securesocial.onLoginGoTo and securesocial.onLogoutGoTo
application.context="/"
application.context=${?CLOWDER_CONTEXT}
securesocial.onLoginGoTo=/
securesocial.onLoginGoTo=${?CLOWDER_CONTEXT}
securesocial.onLogoutGoTo=/
securesocial.onLogoutGoTo=${?CLOWDER_CONTEXT}
securesocial.ssl=false
securesocial.ssl=${?CLOWDER_SSL}

# security options
# following should be set when starting clowder following values should be changed.
application.secret="#,uXmau>8'X7bhN#uYX%cP<DAw-=dkZvxNU9cq&']3(qKUXSw[']{UYRW::Lk'Mu"
application.secret=${?CLOWDER_SECRET}

commKey="8M3wVqcAYa"
commKey=${?CLOWDER_KEY}

# registration
# To enable registration you will need set the following value to true, and specify a admin account
registerThroughAdmins=false
registerThroughAdmins=${?CLOWDER_REGISTER}
initialAdmins="admin@example.com"
initialAdmins=${?CLOWDER_ADMINS}

# email server
# Following will print the email to the console, to enable sending email set smtp.mock to false
# and you get it printed to the console
smtp.mock=true
smtp.mock=${?SMTP_MOCK}
smtp.host="smtp"
smtp.host=${?SMTP_SERVER}
smtp.from="devnull@ncsa.illinois.edu"
smtp.from=${?SMTP_FROM}

# swagger-ui host
swaggerUIHost=${?SWAGGER_UI_HOST}

# storage
service.byteStorage=services.filesystem.DiskByteStorageService
service.byteStorage=${?CLOWDER_STORAGE}

#primary Clowder instance
clowder.primary=true
clowder.primary=${?CLOWDER_PRIMARY}

# location in case of services.filesystem.DiskByteStorageService
clowder.diskStorage.path="/home/clowder/data"
clowder.diskStorage.path=${?CLOWDER_DISKPATH}
filesystem.sourcepaths=["/home/clowder/data"]
filesystem.sourcepaths=[${?CLOWDER_DISKPATH}]
filesystem.sourcepaths=${?CLOWDER_SOURCEPATH}

# location in case of services.s3.S3ByteStorageService
clowder.s3.serviceEndpoint="http://minio:9000"
clowder.s3.bucketName=${?S3_ENDPOINT}
clowder.s3.bucketName="clowder"
clowder.s3.bucketName=${?S3_BUCKET}
clowder.s3.accessKey="clowder"
clowder.s3.accessKey=${?S3_ACCESS_KEY}
clowder.s3.secretKey="catsarecute"
clowder.s3.secretKey=${?S3_SECRET_KEY}

# mongo server
mongodbURI="mongodb://mongo:27017/clowder"
mongodbURI=${?MONGO_URI}

# rabbitmq
clowder.rabbitmq.uri="amqp://guest:guest@rabbitmq/%2F"
clowder.rabbitmq.uri=${?RABBITMQ_URI}
clowder.rabbitmq.exchange=clowder
clowder.rabbitmq.exchange=${?RABBITMQ_EXCHANGE}
clowder.rabbitmq.clowderurl="http://clowder:9000"
clowder.rabbitmq.clowderurl=${?RABBITMQ_CLOWDERURL}

# elasticsearch
elasticsearchSettings.clusterName="clowder"
elasticsearchSettings.serverAddress="elasticsearch"
elasticsearchSettings.serverPort=9300
