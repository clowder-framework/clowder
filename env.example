# This file will override the configation options in the docker-compose
# file. Copy this file to the same folder as docker-compose as .env

# ----------------------------------------------------------------------
# GENERAL CONFIGURATION
# ----------------------------------------------------------------------

# project name (-p flag for docker-compose)
#COMPOSE_PROJECT_NAME=dev

# ----------------------------------------------------------------------
# TRAEFIK CONFIGURATION
# ----------------------------------------------------------------------

# hostname of server
#TRAEFIK_HOST=Host:clowder-docker.ncsa.illinois.edu;

# only allow access from localhost and NCSA
#TRAEFIK_IPFILTER=172.16.0.0/12, 141.142.0.0/16

# Run traffik on port 80 (http) and port 443 (https)
#TRAEFIK_HTTP_PORT=80
#TRAEFIK_HTTPS_PORT=443
#TRAEFIK_HTTPS_OPTIONS=TLS

# enable SSL cerificate generation
#TRAEFIK_ACME_ENABLE=true

# Use you real email address here to be notified if cert expires
#TRAEFIK_ACME_EMAIL=devnull@example.com

# Always use https, trafic to http is redirected to https
#TRAEFIK_HTTP_REDIRECT=Redirect.EntryPoint:https

# ----------------------------------------------------------------------
# CLOWDER CONFIGURATION
# ----------------------------------------------------------------------

# what version of clowder to use
#CLOWDER_VERSION=develop

# path for clowder
#CLOWDER_CONTEXT=/clowder/

# list of initial admins
#CLOWDER_ADMINS=admin@example.com

# require approval of the clowder admins before user can login
#CLOWDER_REGISTER=true

# secret used to encrypt cookies for example
#CLOWDER_SECRET=#,uXmau>8'X7bhN#uYX%cP<DAw-=dkZvxNU9cq&']3(qKUXSw[']{UYRW::Lk'Mu

# admin key to clowder
#CLOWDER_KEY=8M3wVqcAYa

# use SSL for login pages (set this if you enable ACME)
#CLOWDER_SSL=true

# should clowder send email (false means send email using smtp server)
#SMTP_MOCK=false

# name of the smtp server that will handle the emails from clowder
#SMTP_SERVER=smtp

# ----------------------------------------------------------------------
# BYTE STORAGE
# ----------------------------------------------------------------------

# backend to store the actual bytes:
# - services.filesystem.DiskByteStorageService
# - services.s3.S3ByteStorageService
#CLOWDER_STORAGE=services.filesystem.DiskByteStorageService

# Storage for services.s3.S3ByteStorageService
#CLOWDER_DISKPATH=/home/clowder/data

# S3 endpoint to use, this assumes a local instance of minio
#S3_ENDPOINT=http://minio:9000

# bucket that holds the data
#S3_BUCKET=clowder

# access to the bucket
#S3_ACCESS_KEY=clowder
#S3_SECRET_KEY=catsarecute

# ----------------------------------------------------------------------
# RABBITMQ CONFIGURATION
# ----------------------------------------------------------------------

# RabbitMQ username and password
#RABBITMQ_DEFAULT_USER=clowder
#RABBITMQ_DEFAULT_PASS=cats

# create the correct URI with above username and password
#RABBITMQ_URI=amqp://clowder:cats@rabbitmq/%2F

# exchange to be used
#RABBITMQ_EXCHANGE=clowder

# in case of external rabbitmq, the url to clowder
#RABBITMQ_CLOWDERURL=https://clowder-docker.ncsa.illinois.edu/clowder/

# ----------------------------------------------------------------------
# GEOSERVER CONFIGURATION
# ----------------------------------------------------------------------

#PROXY_ON=false
#PROXY_URL=http://localhost:9000

#GEOSERVER_USERNAME=admin
#GEOSERVER_PASSWORD=geoserver

#GEOSERVER_WORKSPACE=workspace

#GEOSERVER_USER=admin
#GEOSERVER_URL=http://localhost:8080
